# focus window
alt - x : yabai -m window --focus recent
alt - h : yabai -m window --focus west
alt - j : yabai -m window --focus south
alt - k : yabai -m window --focus north
alt - l : yabai -m window --focus east
alt - z : yabai -m window --focus stack.prev
alt - c : yabai -m window --focus stack.next

# swap window
shift + alt - x : yabai -m window --swap recent
shift + alt - h : yabai -m window --swap west
shift + alt - j : yabai -m window --swap south
shift + alt - k : yabai -m window --swap north
shift + alt - l : yabai -m window --swap east

# move window
ctrl + alt - h : yabai -m window --warp west
ctrl + alt - j : yabai -m window --warp south
ctrl + alt - k : yabai -m window --warp north
ctrl + alt - l : yabai -m window --warp east

# stack window
cmd + alt + shift - h : yabai -m window --stack west
cmd + alt + shift - j : yabai -m window --stack south
cmd + alt + shift - k : yabai -m window --stack north
cmd + alt + shift - l : yabai -m window --stack east

# set insertion point in focused container
ctrl + alt + cmd + shift - h : yabai -m window --insert west
ctrl + alt + cmd + shift - j : yabai -m window --insert south
ctrl + alt + cmd + shift - k : yabai -m window --insert north
ctrl + alt + cmd + shift - l : yabai -m window --insert east
ctrl + alt + cmd + shift - i : yabai -m window --insert stack

# balance size of windows
shift + alt - 0 : yabai -m space -balance

# make floating window fill screen
shift + alt - up     : yabai -m window --grid 1:1:0:0:1:1

# make floating window fill left-half of screen
shift + alt - left   : yabai -m window --grid 1:2:0:0:1:1

# make floating window fill right-half of screen
shift + alt - right  : yabai -m window --grid 1:2:1:0:1:1

# fast focus desktop
ctrl - 1 : yabai -m space --focus 1
ctrl - 2 : yabai -m space --focus 2
ctrl - 3 : yabai -m space --focus 3
ctrl - 4 : yabai -m space --focus 4
ctrl - 5 : yabai -m space --focus 5
ctrl - 6 : yabai -m space --focus 6
ctrl - 7 : yabai -m space --focus 7
ctrl - 8 : yabai -m space --focus 8
ctrl - 9 : yabai -m space --focus 9
ctrl - 0 : yabai -m space --focus 10

# send window to desktop and follow focus
alt + ctrl - 1 : yabai -m window --space  1 && yabai -m space --focus 1
alt + ctrl - 2 : yabai -m window --space  2 && yabai -m space --focus 2
alt + ctrl - 3 : yabai -m window --space  3 && yabai -m space --focus 3
alt + ctrl - 4 : yabai -m window --space  4 && yabai -m space --focus 4
alt + ctrl - 5 : yabai -m window --space  5 && yabai -m space --focus 5
alt + ctrl - 6 : yabai -m window --space  6 && yabai -m space --focus 6
alt + ctrl - 7 : yabai -m window --space  7 && yabai -m space --focus 7
alt + ctrl - 8 : yabai -m window --space  8 && yabai -m space --focus 8
alt + ctrl - 9 : yabai -m window --space  9 && yabai -m space --focus 9
alt + ctrl - 0 : yabai -m window --space 10 && yabai -m space --focus 10

# send window to desktop
cmd + ctrl - 1 : yabai -m window --space  1
cmd + ctrl - 2 : yabai -m window --space  2
cmd + ctrl - 3 : yabai -m window --space  3
cmd + ctrl - 4 : yabai -m window --space  4
cmd + ctrl - 5 : yabai -m window --space  5
cmd + ctrl - 6 : yabai -m window --space  6
cmd + ctrl - 7 : yabai -m window --space  7
cmd + ctrl - 8 : yabai -m window --space  8
cmd + ctrl - 9 : yabai -m window --space  9
cmd + ctrl - 0 : yabai -m window --space 10

# focus monitor
alt + shift + cmd - x  : yabai -m display --focus recent
alt + shift + cmd - z  : yabai -m display --focus prev
alt + shift + cmd - c  : yabai -m display --focus next
alt + shift + cmd - 1  : yabai -m display --focus 1
alt + shift + cmd - 2  : yabai -m display --focus 2
alt + shift + cmd - 3  : yabai -m display --focus 3

# send window to monitor and follow focus
ctrl + alt + shift + cmd - x  : yabai -m window --display recent && yabai -m display --focus recent
ctrl + alt + shift + cmd - z  : yabai -m window --display prev && yabai -m display --focus prev
ctrl + alt + shift + cmd - c  : yabai -m window --display next && yabai -m display --focus next
ctrl + alt + shift + cmd - 1  : yabai -m window --display 1 && yabai -m display --focus 1
ctrl + alt + shift + cmd - 2  : yabai -m window --display 2 && yabai -m display --focus 2
ctrl + alt + shift + cmd - 3  : yabai -m window --display 3 && yabai -m display --focus 3

# move window
shift + ctrl - a : yabai -m window --move rel:-20:0
shift + ctrl - s : yabai -m window --move rel:0:20
shift + ctrl - w : yabai -m window --move rel:0:-20
shift + ctrl - d : yabai -m window --move rel:20:0

# increase window size
shift + alt - a : yabai -m window --resize left:-20:0
shift + alt - s : yabai -m window --resize bottom:0:20
shift + alt - w : yabai -m window --resize top:0:-20
shift + alt - d : yabai -m window --resize right:20:0

# decrease window size
shift + cmd - a : yabai -m window --resize left:20:0
shift + cmd - s : yabai -m window --resize bottom:0:-20
shift + cmd - w : yabai -m window --resize top:0:20
shift + cmd - d : yabai -m window --resize right:-20:0

# rotate tree
alt - r : yabai -m space --rotate 90
alt + shift - r : yabai -m space --rotate 270

# mirror tree y-axis
alt - v : yabai -m space --mirror y-axis

# mirror tree x-axis
alt + shift - v : yabai -m space --mirror x-axis

# toggle window parent zoom
#alt - d : yabai -m window --toggle zoom-parent

# toggle window fullscreen zoom
alt - f : yabai -m space --toggle padding && yabai -m space --toggle gap && yabai -m window --toggle zoom-fullscreen
alt + shift - f : yabai -m window --toggle zoom-fullscreen

# toggle window native fullscreen
#shift + alt - f : yabai -m window --toggle native-fullscreen

# toggle window split type
alt - e : yabai -m window --toggle split

# float / unfloat window and restore position
# alt - t : yabai -m window --toggle float && /tmp/yabai-restore/$(yabai -m query --windows --window | jq -re '.id').restore 2>/dev/null || true
alt - t : yabai -m window --toggle float && yabai -m window --grid 4:4:1:1:2:2

# toggle sticky (show on all spaces)
alt - y : yabai -m window --toggle sticky

# toggle topmost (keep above other windows)
alt - o : yabai -m window --toggle topmost

# toggle picture-in-picture
alt - p : yabai -m window --toggle border && \
          yabai -m window --toggle pip

# change layout of desktop
ctrl + alt - a : yabai -m space --layout bsp
ctrl + alt - d : yabai -m space --layout float
ctrl + alt - s : yabai -m space --layout $(yabai -m query --spaces --space | jq -r 'if .type == "bsp" then "float" else "bsp" end')


# Focus window of same app
alt - tab: yabai -m window --focus "$(yabai -m query --windows | jq -re "map(select(.app == \"$(yabai -m query --windows --window | jq -re '.app')\" and .\"has-focus\" == false))[0].id")"

# Terminal
cmd - return : ghostty
alt - 1 : osascript -e 'tell application "Ghostty" to activate' -e 'tell application "Ghostty" to reopen'
alt - 2 : osascript -e 'tell application "Intellij IDEA" to activate' -e 'tell application "Intellij IDEA" to reopen'
alt - 3 : osascript -e 'tell application "WebStorm" to activate' -e 'tell application "WebStorm" to reopen'

# Applications
:: apps
alt - s ; apps
apps < t : osascript -e 'tell application "Telegram" to activate' -e 'tell application "Telegram" to reopen' ; skhd -k 'escape'
apps < s : osascript -e 'tell application "Slack" to activate' -e 'tell application "Slack" to reopen' ; skhd -k 'escape'
apps < d : osascript -e 'tell application "Discord" to activate' -e 'tell application "Discord" to reopen'; skhd -k 'escape'
apps < w : osascript -e 'tell application "Whatsapp" to activate' -e 'tell application "Whatsapp" to reopen' ; skhd -k 'escape'
apps < f : osascript -e 'tell application "Firefox" to activate' -e 'tell application "Firefox" to reopen' ; xkhd -k 'escape'
apps < b : osascript -e 'tell application "Brave Browser" to activate' -e 'tell application "Brave Browser" to reopen' ; skhd -k 'escape'
apps < n : osascript -e 'tell application "NordVPN" to activate' -e 'tell application "NordVPN" to reopen' ; skhd -k 'escape'

apps < return ; default
apps < escape ; default

# Engineering
:: eng
alt - a ; eng

eng < e : open -a "Intellij IDEA" ; skhd -k 'escape'
eng < w : open -a "WebStorm" ; skhd -k 'escape'
eng < d : osascript -e 'tell application "DataGrip" to activate' -e 'tell application "DataGrip" to reopen' ; skhd -k 'escape'
eng < r : osascript -e 'tell application "RustRover" to activate' -e 'tell application "RustRover" to reopen' ; skhd -k 'escape'
eng < g : osascript -e 'tell application "GoLand" to activate' -e 'tell application "GoLand" to reopen' ; skhd -k 'escape'
eng < p : osascript -e 'tell application "Postman" to activate' -e 'tell application "Postman" to reopen' ; skhd -k 'escape'
eng < v : osascript -e 'tell application "Visual Studio Code" to activate' -e 'tell application "Visual Studio Code" to reopen' ; skhd -k 'escape'

eng < return ; default
eng < escape ; default

cmd + shift - k : \
    yabai -m space --focus $(yabai -m query --spaces --space next || yabai -m query --spaces --space first) && \
    yabai -m window --focus $(yabai -m query --spaces --space | jq -r '.windows[0]')
