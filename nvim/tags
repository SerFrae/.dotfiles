!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!JSON	a,array	/arrays/
!_TAG_KIND_DESCRIPTION!JSON	b,boolean	/booleans/
!_TAG_KIND_DESCRIPTION!JSON	n,number	/numbers/
!_TAG_KIND_DESCRIPTION!JSON	o,object	/objects/
!_TAG_KIND_DESCRIPTION!JSON	s,string	/strings/
!_TAG_KIND_DESCRIPTION!JSON	z,null	/nulls/
!_TAG_KIND_DESCRIPTION!Lua	f,function	/functions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!JSON	0.0	/current.age/
!_TAG_PARSER_VERSION!Lua	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/a7rs/.dotfiles/nvim/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/08e07dc98/
LListToggle	init.lua	/^function LListToggle(v, e)$/;"	f
MarkdownGf	init.lua	/^function MarkdownGf()$/;"	f
NewNote	init.lua	/^function NewNote(name)$/;"	f
NoteFind	init.lua	/^function NoteFind()$/;"	f
NoteLink	init.lua	/^function NoteLink()$/;"	f
QFixToggle	init.lua	/^function QFixToggle(v, e)$/;"	f
attach_mappings	init.lua	/^		attach_mappings = function(_, map)$/;"	f
branch	lazy-lock.json	/^  "cmp-buffer": { "branch": "main", "commit": "3022dbc9166796b644a841a02de8dd1cc1d311fa" },$/;"	s	object:cmp-buffer
branch	lazy-lock.json	/^  "cmp-nvim-lsp": { "branch": "main", "commit": "39e2eda76828d88b773cc27a3f61d2ad782c922d" },$/;"	s	object:cmp-nvim-lsp
branch	lazy-lock.json	/^  "cmp-path": { "branch": "main", "commit": "91ff86cd9c29299a64f968ebb45846c485725f23" },$/;"	s	object:cmp-path
branch	lazy-lock.json	/^  "copilot.vim": { "branch": "release", "commit": "1dcaf72099b436b5832d6117d9cd7a4a098a8d77" },$/;"	s	object:copilot.vim
branch	lazy-lock.json	/^  "dressing.nvim": { "branch": "master", "commit": "e3714c8049b2243e792492c4149e4cc395c68eb9" },$/;"	s	object:dressing.nvim
branch	lazy-lock.json	/^  "flash.nvim": { "branch": "main", "commit": "43f67935d388fbb540f8b40e8cbfd80de54f978a" },$/;"	s	object:flash.nvim
branch	lazy-lock.json	/^  "lazy.nvim": { "branch": "main", "commit": "eb4957442e3182f051b0ae11da32e06d22c190e3" },$/;"	s	object:lazy.nvim
branch	lazy-lock.json	/^  "lualine.nvim": { "branch": "master", "commit": "0a5a66803c7407767b799067986b4dc3036e1983" },$/;"	s	object:lualine.nvim
branch	lazy-lock.json	/^  "nvim": { "branch": "main", "commit": "5215ea59df6d0a7e27da9a5cd1165e06d1b04cbe" },$/;"	s	object:nvim
branch	lazy-lock.json	/^  "nvim-cmp": { "branch": "main", "commit": "a110e12d0b58eefcf5b771f533fc2cf3050680ac" },$/;"	s	object:nvim-cmp
branch	lazy-lock.json	/^  "nvim-lspconfig": { "branch": "master", "commit": "92166b89ab4b3d60f24e58170cac53b7141fd032" }/;"	s	object:nvim-lspconfig
branch	lazy-lock.json	/^  "nvim-treesitter": { "branch": "master", "commit": "9ebc589329083522f9594f408fc2652090b41139" /;"	s	object:nvim-treesitter
branch	lazy-lock.json	/^  "plenary.nvim": { "branch": "master", "commit": "a3e3bc82a3f95c5ed0d7201546d5d2c19b20d683" },$/;"	s	object:plenary.nvim
branch	lazy-lock.json	/^  "telescope-fzf-native.nvim": { "branch": "main", "commit": "9ef21b2e6bb6ebeaf349a0781745549bbb/;"	s	object:telescope-fzf-native.nvim
branch	lazy-lock.json	/^  "telescope.nvim": { "branch": "master", "commit": "3a743491e5c6be0ed0aa8c31c6905df8f66179ba" }$/;"	s	object:telescope.nvim
callback	init.lua	/^				callback = function(ev)$/;"	f
callback	init.lua	/^		callback = function(_)$/;"	f
callback	init.lua	/^	callback = function() pyss() end,$/;"	f
callback	init.lua	/^	callback = function()$/;"	f
cmp-buffer	lazy-lock.json	/^  "cmp-buffer": { "branch": "main", "commit": "3022dbc9166796b644a841a02de8dd1cc1d311fa" },$/;"	o
cmp-nvim-lsp	lazy-lock.json	/^  "cmp-nvim-lsp": { "branch": "main", "commit": "39e2eda76828d88b773cc27a3f61d2ad782c922d" },$/;"	o
cmp-path	lazy-lock.json	/^  "cmp-path": { "branch": "main", "commit": "91ff86cd9c29299a64f968ebb45846c485725f23" },$/;"	o
commit	lazy-lock.json	/^  "cmp-buffer": { "branch": "main", "commit": "3022dbc9166796b644a841a02de8dd1cc1d311fa" },$/;"	s	object:cmp-buffer
commit	lazy-lock.json	/^  "cmp-nvim-lsp": { "branch": "main", "commit": "39e2eda76828d88b773cc27a3f61d2ad782c922d" },$/;"	s	object:cmp-nvim-lsp
commit	lazy-lock.json	/^  "cmp-path": { "branch": "main", "commit": "91ff86cd9c29299a64f968ebb45846c485725f23" },$/;"	s	object:cmp-path
commit	lazy-lock.json	/^  "copilot.vim": { "branch": "release", "commit": "1dcaf72099b436b5832d6117d9cd7a4a098a8d77" },$/;"	s	object:copilot.vim
commit	lazy-lock.json	/^  "dressing.nvim": { "branch": "master", "commit": "e3714c8049b2243e792492c4149e4cc395c68eb9" },$/;"	s	object:dressing.nvim
commit	lazy-lock.json	/^  "flash.nvim": { "branch": "main", "commit": "43f67935d388fbb540f8b40e8cbfd80de54f978a" },$/;"	s	object:flash.nvim
commit	lazy-lock.json	/^  "lazy.nvim": { "branch": "main", "commit": "eb4957442e3182f051b0ae11da32e06d22c190e3" },$/;"	s	object:lazy.nvim
commit	lazy-lock.json	/^  "lualine.nvim": { "branch": "master", "commit": "0a5a66803c7407767b799067986b4dc3036e1983" },$/;"	s	object:lualine.nvim
commit	lazy-lock.json	/^  "nvim": { "branch": "main", "commit": "5215ea59df6d0a7e27da9a5cd1165e06d1b04cbe" },$/;"	s	object:nvim
commit	lazy-lock.json	/^  "nvim-cmp": { "branch": "main", "commit": "a110e12d0b58eefcf5b771f533fc2cf3050680ac" },$/;"	s	object:nvim-cmp
commit	lazy-lock.json	/^  "nvim-lspconfig": { "branch": "master", "commit": "92166b89ab4b3d60f24e58170cac53b7141fd032" }/;"	s	object:nvim-lspconfig
commit	lazy-lock.json	/^  "nvim-treesitter": { "branch": "master", "commit": "9ebc589329083522f9594f408fc2652090b41139" /;"	s	object:nvim-treesitter
commit	lazy-lock.json	/^  "plenary.nvim": { "branch": "master", "commit": "a3e3bc82a3f95c5ed0d7201546d5d2c19b20d683" },$/;"	s	object:plenary.nvim
commit	lazy-lock.json	/^  "telescope-fzf-native.nvim": { "branch": "main", "commit": "9ef21b2e6bb6ebeaf349a0781745549bbb/;"	s	object:telescope-fzf-native.nvim
commit	lazy-lock.json	/^  "telescope.nvim": { "branch": "master", "commit": "3a743491e5c6be0ed0aa8c31c6905df8f66179ba" }$/;"	s	object:telescope.nvim
config	init.lua	/^		config = function()$/;"	f
copilot.vim	lazy-lock.json	/^  "copilot.vim": { "branch": "release", "commit": "1dcaf72099b436b5832d6117d9cd7a4a098a8d77" },$/;"	o
dressing.nvim	lazy-lock.json	/^  "dressing.nvim": { "branch": "master", "commit": "e3714c8049b2243e792492c4149e4cc395c68eb9" },$/;"	o
expand	init.lua	/^					expand = function(args)$/;"	f
flash.nvim	lazy-lock.json	/^  "flash.nvim": { "branch": "main", "commit": "43f67935d388fbb540f8b40e8cbfd80de54f978a" },$/;"	o
insert_link_action	init.lua	/^	local insert_link_action = function(prompt_bufnr)$/;"	f
lazy.nvim	lazy-lock.json	/^  "lazy.nvim": { "branch": "main", "commit": "eb4957442e3182f051b0ae11da32e06d22c190e3" },$/;"	o
list_cmd	init.lua	/^function list_cmd()$/;"	f
lualine.nvim	lazy-lock.json	/^  "lualine.nvim": { "branch": "master", "commit": "0a5a66803c7407767b799067986b4dc3036e1983" },$/;"	o
mode	init.lua	/^			{ "<c-s>", mode = { "c" },           function() require("flash").toggle() end,            des/;"	f
mode	init.lua	/^			{ "R",     mode = { "o", "x" },      function() require("flash").treesitter_search() end, des/;"	f
mode	init.lua	/^			{ "S",     mode = { "n", "x", "o" }, function() require("flash").treesitter() end,        des/;"	f
mode	init.lua	/^			{ "r",     mode = "o",               function() require("flash").remote() end,            des/;"	f
mode	init.lua	/^			{ "s",     mode = { "n", "x", "o" }, function() require("flash").jump() end,              des/;"	f
nvim	lazy-lock.json	/^  "nvim": { "branch": "main", "commit": "5215ea59df6d0a7e27da9a5cd1165e06d1b04cbe" },$/;"	o
nvim-cmp	lazy-lock.json	/^  "nvim-cmp": { "branch": "main", "commit": "a110e12d0b58eefcf5b771f533fc2cf3050680ac" },$/;"	o
nvim-lspconfig	lazy-lock.json	/^  "nvim-lspconfig": { "branch": "master", "commit": "92166b89ab4b3d60f24e58170cac53b7141fd032" }/;"	o
nvim-treesitter	lazy-lock.json	/^  "nvim-treesitter": { "branch": "master", "commit": "9ebc589329083522f9594f408fc2652090b41139" /;"	o
plenary.nvim	lazy-lock.json	/^  "plenary.nvim": { "branch": "master", "commit": "a3e3bc82a3f95c5ed0d7201546d5d2c19b20d683" },$/;"	o
pyss	init.lua	/^local function pyss()$/;"	f
telescope-fzf-native.nvim	lazy-lock.json	/^  "telescope-fzf-native.nvim": { "branch": "main", "commit": "9ef21b2e6bb6ebeaf349a0781745549bbb/;"	o
telescope.nvim	lazy-lock.json	/^  "telescope.nvim": { "branch": "master", "commit": "3a743491e5c6be0ed0aa8c31c6905df8f66179ba" }$/;"	o
